"use strict";(()=>{var e={};e.id=4601,e.ids=[4601],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2348:(e,a,t)=>{t.r(a),t.d(a,{originalPathname:()=>l,patchFetch:()=>m,requestAsyncStorage:()=>p,routeModule:()=>c,serverHooks:()=>h,staticGenerationAsyncStorage:()=>u});var r={};t.r(r),t.d(r,{GET:()=>d});var s=t(3278),n=t(5002),o=t(4877),i=t(1309);async function d(e){try{let a=new URL(e.url).searchParams.toString(),t=`http://reranker:8008/api/data-dictionary/database-schemas${a?`?${a}`:""}`,r=await fetch(t),s=await r.json();return i.NextResponse.json(s)}catch(e){return console.error("Error proxying database schemas request:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}let c=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/data-dictionary/database-schemas/route",pathname:"/api/data-dictionary/database-schemas",filename:"route",bundlePath:"app/api/data-dictionary/database-schemas/route"},resolvedPagePath:"/home/kmccullor/Projects/Technical-Service-Assistant/next-rag-app/app/api/data-dictionary/database-schemas/route.ts",nextConfigOutput:"standalone",userland:r}),{requestAsyncStorage:p,staticGenerationAsyncStorage:u,serverHooks:h}=c,l="/api/data-dictionary/database-schemas/route";function m(){return(0,o.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:u})}}};var a=require("../../../../webpack-runtime.js");a.C(e);var t=e=>a(a.s=e),r=a.X(0,[9379,4833],()=>t(2348));module.exports=r})();