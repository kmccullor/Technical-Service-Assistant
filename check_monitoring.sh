#!/bin/bash
# Monitoring Stack Status Check
# Provides comprehensive status of Prometheus and Grafana monitoring

echo "üîç Technical Service Assistant - Monitoring Stack Status"
echo "========================================================"

# Color codes
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo ""
echo "üìä Monitoring Services Status:"
echo "=============================="

# Check Prometheus
if curl -s http://localhost:9091/-/healthy > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Prometheus${NC} - Running on http://localhost:9091"
else
    echo -e "${RED}‚ùå Prometheus${NC} - Not accessible"
fi

# Check Grafana
if curl -s http://localhost:3001/api/health > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Grafana${NC} - Running on http://localhost:3001"
    echo "   Default login: admin/admin"
else
    echo -e "${RED}‚ùå Grafana${NC} - Not accessible"
fi

# Check exporters
echo ""
echo "üìà Metrics Exporters:"
echo "===================="

# Node Exporter
if curl -s http://localhost:9100/metrics | head -1 > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Node Exporter${NC} - System metrics (port 9100)"
else
    echo -e "${RED}‚ùå Node Exporter${NC} - Not accessible"
fi

# Postgres Exporter
if curl -s http://localhost:9187/metrics | head -1 > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ PostgreSQL Exporter${NC} - Database metrics (port 9187)"
else
    echo -e "${RED}‚ùå PostgreSQL Exporter${NC} - Not accessible"
fi

# Redis Exporter
if curl -s http://localhost:9121/metrics | head -1 > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Redis Exporter${NC} - Cache metrics (port 9121)"
else
    echo -e "${RED}‚ùå Redis Exporter${NC} - Not accessible"
fi

# cAdvisor
if curl -s http://localhost:8081/metrics | head -1 > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ cAdvisor${NC} - Container metrics (port 8081)"
else
    echo -e "${RED}‚ùå cAdvisor${NC} - Not accessible"
fi

# Check Prometheus targets
echo ""
echo "üéØ Prometheus Target Status:"
echo "==========================="

TARGETS=$(curl -s http://localhost:9091/api/v1/targets | jq -r '.data.activeTargets[] | "\(.labels.job):\(.health)"' 2>/dev/null)

if [ $? -eq 0 ] && [ ! -z "$TARGETS" ]; then
    while IFS=: read -r job health; do
        if [ "$health" = "up" ]; then
            echo -e "${GREEN}‚úÖ $job${NC}"
        else
            echo -e "${RED}‚ùå $job${NC} ($health)"
        fi
    done <<< "$TARGETS"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Could not retrieve target status${NC}"
fi

echo ""
echo "üìã Key Metrics Available:"
echo "========================="
echo "‚Ä¢ System Resources (CPU, Memory, Disk)"
echo "‚Ä¢ Docker Container Statistics"
echo "‚Ä¢ PostgreSQL Database Performance"
echo "‚Ä¢ Redis Cache Performance"
echo "‚Ä¢ Custom Application Metrics"
echo "‚Ä¢ HTTP Request Metrics"
echo ""

echo "üåê Access URLs:"
echo "==============="
echo "‚Ä¢ Prometheus: http://localhost:9091"
echo "‚Ä¢ Grafana: http://localhost:3001 (admin/admin)"
echo "‚Ä¢ cAdvisor: http://localhost:8081"
echo "‚Ä¢ Node Metrics: http://localhost:9100/metrics"
echo ""

echo "üìä Quick Grafana Setup:"
echo "======================="
echo "1. Open http://localhost:3001"
echo "2. Login with admin/admin"
echo "3. Dashboards are pre-configured and auto-imported"
echo "4. Check 'Technical Service Assistant' folder"
echo ""

echo "üîç Useful Queries:"
echo "=================="
echo "‚Ä¢ System CPU: 100 - (avg(irate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)"
echo "‚Ä¢ Memory Usage: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100"
echo "‚Ä¢ Container Status: up"
echo "‚Ä¢ Database Connections: pg_stat_activity_count"
echo ""

# Check if any containers are down
DOWN_CONTAINERS=$(docker ps -a --filter "name=prometheus|grafana|exporter|cadvisor" --format "table {{.Names}}\t{{.Status}}" | grep -v "Up" | wc -l)

if [ $DOWN_CONTAINERS -gt 1 ]; then  # Subtract 1 for header
    echo -e "${YELLOW}‚ö†Ô∏è  Some monitoring containers may be down. Check with:${NC}"
    echo "   docker ps --filter \"name=prometheus|grafana|exporter|cadvisor\""
    echo ""
fi

echo -e "${BLUE}üöÄ Monitoring stack is ready for Technical Service Assistant!${NC}"