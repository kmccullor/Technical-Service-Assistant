# Pre-commit hooks configuration for AI PDF Vector Stack
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

repos:
  # Built-in hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        description: Remove trailing whitespace
      - id: end-of-file-fixer
        description: Ensure files end with a newline
      - id: check-yaml
        description: Validate YAML files
      - id: check-added-large-files
        description: Prevent committing large files
      - id: check-merge-conflict
        description: Check for merge conflict markers

  # Python code formatting with Black
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        language_version: python3.9
        args: ['--line-length=120']
        description: Format Python code with Black

  # Import sorting with isort
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ['--profile=black', '--line-length=120']
        description: Sort Python imports

  # Remove unused imports and variables
  - repo: https://github.com/PyCQA/autoflake
    rev: v2.2.0
    hooks:
      - id: autoflake
        args:
          - --remove-all-unused-imports
          - --remove-unused-variables
          - --in-place
        description: Remove unused imports and variables

  # Python linting with flake8
  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        args: ['--max-line-length=120', '--extend-ignore=E203,W503,F541']
        description: Lint Python code with flake8
        additional_dependencies:
          - flake8-docstrings
          - flake8-import-order

  # Static type checking with mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.1
    hooks:
      - id: mypy
        additional_dependencies: [types-requests, types-psycopg2, types-redis]
        description: Static type checking with mypy

  # Security scanning with bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml']
        description: Security linting with bandit

  # Docstring style checking
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: ['--convention=google']
        description: Check docstring style

# Configuration for specific file types
exclude: |
  (?x)^(
    .venv/.*|
    venv/.*|
    __pycache__/.*|
    .*\.pyc|
    logs/.*|
    uploads/.*|
    extracted_images/.*
  )$